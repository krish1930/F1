name: Ubuntu ssh Virtual Machine
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.2

    - name: Preparing Linux Environment
      run: sudo apt-get update

    - name: Setting Up the Ubuntu Environment and Starting Ngrok
      id: setup_vm_and_ngrok # This ID is crucial to access outputs
      run: bash linux-ssh.sh
      env:
        LINUX_USER_PASSWORD: ${{ secrets.LINUX_USER_PASSWORD }}
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        CHROME_HEADLESS_CODE: ${{ secrets.CHROME_HEADLESS_CODE }}
        LINUX_MACHINE_NAME: ${{ secrets.LINUX_MACHINE_NAME }}
        LINUX_USERNAME: ${{ secrets.LINUX_USERNAME }}
        # Note: You will need to add the jq installation and ngrok URL extraction
        # directly into your linux-ssh.sh script as discussed previously.
        # The linux-ssh.sh script must also echo "::set-output name=ngrok_ssh_url::THE_URL"

    - name: Send Ngrok URL to Telegram
      env:
        # These are placeholders. You MUST add them as repository secrets.
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        NGROK_URL="${{ steps.setup_vm_and_ngrok.outputs.ngrok_ssh_url }}"

        if [ -z "$NGROK_URL" ]; then
          echo "Error: Ngrok URL was not captured from linux-ssh.sh. Telegram message not sent."
          exit 1
        fi

        # Make sure LINUX_USERNAME and LINUX_USER_PASSWORD are available as secrets
        # and match 'krish' for your mining script's expectations.
        MESSAGE="Your GitHub Actions VM is ready!
        SSH URL: $NGROROK_URL
        Username: krish
        Password: krish"

        # Use curl to send the message to your Telegram bot
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -d chat_id="$TELEGRAM_CHAT_ID" \
          -d text="$MESSAGE" \
          -d parse_mode="HTML"
      
    - name: Keep Running Ubuntu System and keepAlive
      run: sleep 6h # Keep the VM running for 6 hours
