name: Ubuntu SSH Virtual Machine

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3.5.2

    - name: Make linux-ssh.sh Executable and Run Script
      id: setup_vm
      run: |
        chmod +x linux-ssh.sh

        # Run script and capture output
        OUTPUT=$(bash linux-ssh.sh | tee output.log)

        echo "=== Output log ==="
        cat output.log

        # Extract SSH connection line using grep
        SSH_LINE=$(echo "$OUTPUT" | grep -oP 'ssh \S+@\S+ -p \d+')

        if [[ -z "$SSH_LINE" ]]; then
          echo "Error: Could not extract SSH connection details."
          exit 1
        fi

        echo "Extracted SSH Line: $SSH_LINE"

        # Output to GitHub Actions
        echo "::set-output name=ngrok_ssh_url::$SSH_LINE"
      env:
        LINUX_USER_PASSWORD: ${{ secrets.LINUX_USER_PASSWORD }}
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        LINUX_USERNAME: ${{ secrets.LINUX_USERNAME }}
        LINUX_MACHINE_NAME: ${{ secrets.LINUX_MACHINE_NAME }}

    - name: Send Ngrok URL to Telegram
      run: |
        SSH_URL="${{ steps.setup_vm.outputs.ngrok_ssh_url }}"
        if [ -z "$SSH_URL" ]; then
          echo "Error: SSH URL was not captured."
          exit 1
        fi

        MESSAGE="‚úÖ Your GitHub Actions VM is ready!

üîê SSH Command:
<code>$SSH_URL</code>

üë§ Username: <code>${{ secrets.LINUX_USERNAME }}</code>
üîë Password: <code>${{ secrets.LINUX_USER_PASSWORD }}</code>"

        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE" \
          -d parse_mode="HTML"
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: Keep the VM alive
      run: sleep 6h
